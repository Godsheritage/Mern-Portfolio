{"ast":null,"code":"import { TOTAL_SCREENS } from './commonUtils';\nimport { Subject } from 'rxjs';\nexport default class ScrollService {\n  /* SINGLETON CLASS INSTANCE */\n\n  /* BROADCASTERS */\n  constructor() {\n    this.scrollToHireMe = () => {\n      let contactMeScreen = document.getElementById(\"Contact Me\");\n      if (!contactMeScreen) return;\n      contactMeScreen.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    };\n\n    this.isElementInView = (elem, type) => {\n      let rec = elem.getBoundingClientRect();\n      let elementTop = rec.top;\n      let elemBottom = rec.bottom;\n      /* Partially Visible */\n\n      let partiallyVisible = elementTop < window.innerHeight && elemBottom >= 0;\n      /* Completely Visible */\n\n      let completelyVisible = elementTop >= 0 && elemBottom <= window.innerHeight;\n\n      switch (type) {\n        case \"partial\":\n          return partiallyVisible;\n\n        case \"complete\":\n          return completelyVisible;\n\n        default:\n          return false;\n      }\n    };\n\n    this.checkCurrentScreenUnderViewport = event => {\n      if (!event || Object.keys(event).length < 1) return;\n\n      for (let screen of TOTAL_SCREENS) {\n        let screenFromDOM = document.getElementById(screen.screen_name);\n        if (!screenFromDOM) continue;\n        let fullyVisible = this.isElementInView(screenFromDOM, \"complete\");\n        let partiallyVisible = this.isElementInView(screenFromDOM, \"partial\");\n\n        if (fullyVisible || partiallyVisible) {\n          if (partiallyVisible && !screen.alreadyRendered) {\n            //BROADCAST FADE IN EFFECT\n            ScrollService.currentScreenFadeIn.next({\n              fadeInScreen: screen.screen_name\n            });\n            screen['alreadyRendered'] = true;\n            break;\n          }\n\n          if (fullyVisible) {\n            // BROADCAST SCREEN NAME\n            ScrollService.currentScreenBroadcaster.next({\n              screenInView: screen.screen_name\n            });\n            break;\n          }\n        }\n      }\n    };\n\n    /* ADD SCROLL EVENT TO WINDOW */\n    window.addEventListener('scroll', this.checkCurrentScreenUnderViewport);\n  }\n  /* SCROLL TO HIRE ME / CONTACT ME SCREEN */\n\n\n}\nScrollService.scrollHandler = new ScrollService();\nScrollService.currentScreenBroadcaster = new Subject();\nScrollService.currentScreenFadeIn = new Subject();","map":{"version":3,"names":["TOTAL_SCREENS","Subject","ScrollService","constructor","scrollToHireMe","contactMeScreen","document","getElementById","scrollIntoView","behavior","isElementInView","elem","type","rec","getBoundingClientRect","elementTop","top","elemBottom","bottom","partiallyVisible","window","innerHeight","completelyVisible","checkCurrentScreenUnderViewport","event","Object","keys","length","screen","screenFromDOM","screen_name","fullyVisible","alreadyRendered","currentScreenFadeIn","next","fadeInScreen","currentScreenBroadcaster","screenInView","addEventListener","scrollHandler"],"sources":["/Users/godsheritageadeoye/Documents/GitHub/Mern-Portfolio/client/src/utilities/ScrollService.js"],"sourcesContent":["import { TOTAL_SCREENS } from './commonUtils';\nimport { Subject } from 'rxjs';\n\nexport default class ScrollService {\n\n  /* SINGLETON CLASS INSTANCE */\n  static scrollHandler = new ScrollService();\n\n  /* BROADCASTERS */\n  static currentScreenBroadcaster = new Subject();\n  static currentScreenFadeIn = new Subject();\n\n  constructor() {\n    /* ADD SCROLL EVENT TO WINDOW */\n    window.addEventListener('scroll', this.checkCurrentScreenUnderViewport);\n  }\n\n  /* SCROLL TO HIRE ME / CONTACT ME SCREEN */\n  scrollToHireMe = () => {\n    let contactMeScreen = document.getElementById(\"Contact Me\");\n    if (!contactMeScreen) return;\n\n    contactMeScreen.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  /* CHECK IF ELEMENT IS IN VIEW */\n  isElementInView = (elem, type) => {\n    let rec = elem.getBoundingClientRect();\n    let elementTop = rec.top;\n    let elemBottom = rec.bottom;\n\n    /* Partially Visible */\n    let partiallyVisible = elementTop < window.innerHeight && elemBottom >= 0;\n\n    /* Completely Visible */\n    let completelyVisible = elementTop >= 0 && elemBottom <= window.innerHeight;\n\n    switch (type) {\n      case \"partial\":\n          return partiallyVisible;\n        \n      case \"complete\":\n          return completelyVisible;\n    \n      default:\n          return false;\n    }\n  };\n  \n  /* CHECK THE SCREEN THATS CURRENTLY UNDER VIEWPORT */\n  checkCurrentScreenUnderViewport = (event) => {\n    if(!event || Object.keys(event).length < 1)\n    return;\n\n    for(let screen of TOTAL_SCREENS){\n      let screenFromDOM = document.getElementById(screen.screen_name);\n      if(!screenFromDOM)\n      continue;\n\n      let fullyVisible = this.isElementInView(screenFromDOM, \"complete\");\n      let partiallyVisible = this.isElementInView(screenFromDOM, \"partial\");\n\n      if(fullyVisible || partiallyVisible) {\n        if(partiallyVisible && !screen.alreadyRendered){\n          //BROADCAST FADE IN EFFECT\n          ScrollService.currentScreenFadeIn.next({\n            fadeInScreen: screen.screen_name\n          });\n          screen['alreadyRendered'] = true;\n          break;\n        }\n\n        if (fullyVisible) {\n          // BROADCAST SCREEN NAME\n          ScrollService.currentScreenBroadcaster.next({\n            screenInView: screen.screen_name\n          });\n          break;\n        }\n      }\n    }\n  }\n\n}\n"],"mappings":"AAAA,SAASA,aAAT,QAA8B,eAA9B;AACA,SAASC,OAAT,QAAwB,MAAxB;AAEA,eAAe,MAAMC,aAAN,CAAoB;EAEjC;;EAGA;EAIAC,WAAW,GAAG;IAAA,KAMdC,cANc,GAMG,MAAM;MACrB,IAAIC,eAAe,GAAGC,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAAtB;MACA,IAAI,CAACF,eAAL,EAAsB;MAEtBA,eAAe,CAACG,cAAhB,CAA+B;QAAEC,QAAQ,EAAE;MAAZ,CAA/B;IACD,CAXa;;IAAA,KAcdC,eAdc,GAcI,CAACC,IAAD,EAAOC,IAAP,KAAgB;MAChC,IAAIC,GAAG,GAAGF,IAAI,CAACG,qBAAL,EAAV;MACA,IAAIC,UAAU,GAAGF,GAAG,CAACG,GAArB;MACA,IAAIC,UAAU,GAAGJ,GAAG,CAACK,MAArB;MAEA;;MACA,IAAIC,gBAAgB,GAAGJ,UAAU,GAAGK,MAAM,CAACC,WAApB,IAAmCJ,UAAU,IAAI,CAAxE;MAEA;;MACA,IAAIK,iBAAiB,GAAGP,UAAU,IAAI,CAAd,IAAmBE,UAAU,IAAIG,MAAM,CAACC,WAAhE;;MAEA,QAAQT,IAAR;QACE,KAAK,SAAL;UACI,OAAOO,gBAAP;;QAEJ,KAAK,UAAL;UACI,OAAOG,iBAAP;;QAEJ;UACI,OAAO,KAAP;MARN;IAUD,CAnCa;;IAAA,KAsCdC,+BAtCc,GAsCqBC,KAAD,IAAW;MAC3C,IAAG,CAACA,KAAD,IAAUC,MAAM,CAACC,IAAP,CAAYF,KAAZ,EAAmBG,MAAnB,GAA4B,CAAzC,EACA;;MAEA,KAAI,IAAIC,MAAR,IAAkB5B,aAAlB,EAAgC;QAC9B,IAAI6B,aAAa,GAAGvB,QAAQ,CAACC,cAAT,CAAwBqB,MAAM,CAACE,WAA/B,CAApB;QACA,IAAG,CAACD,aAAJ,EACA;QAEA,IAAIE,YAAY,GAAG,KAAKrB,eAAL,CAAqBmB,aAArB,EAAoC,UAApC,CAAnB;QACA,IAAIV,gBAAgB,GAAG,KAAKT,eAAL,CAAqBmB,aAArB,EAAoC,SAApC,CAAvB;;QAEA,IAAGE,YAAY,IAAIZ,gBAAnB,EAAqC;UACnC,IAAGA,gBAAgB,IAAI,CAACS,MAAM,CAACI,eAA/B,EAA+C;YAC7C;YACA9B,aAAa,CAAC+B,mBAAd,CAAkCC,IAAlC,CAAuC;cACrCC,YAAY,EAAEP,MAAM,CAACE;YADgB,CAAvC;YAGAF,MAAM,CAAC,iBAAD,CAAN,GAA4B,IAA5B;YACA;UACD;;UAED,IAAIG,YAAJ,EAAkB;YAChB;YACA7B,aAAa,CAACkC,wBAAd,CAAuCF,IAAvC,CAA4C;cAC1CG,YAAY,EAAET,MAAM,CAACE;YADqB,CAA5C;YAGA;UACD;QACF;MACF;IACF,CArEa;;IACZ;IACAV,MAAM,CAACkB,gBAAP,CAAwB,QAAxB,EAAkC,KAAKf,+BAAvC;EACD;EAED;;;AAdiC;AAAdrB,a,CAGZqC,a,GAAgB,IAAIrC,aAAJ,E;AAHJA,a,CAMZkC,wB,GAA2B,IAAInC,OAAJ,E;AANfC,a,CAOZ+B,mB,GAAsB,IAAIhC,OAAJ,E"},"metadata":{},"sourceType":"module"}