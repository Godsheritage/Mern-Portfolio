{"ast":null,"code":"/** PURE_IMPORTS_START _isArray PURE_IMPORTS_END */\nimport { isArray } from './isArray';\nexport function isNumeric(val) {\n  return !isArray(val) && val - parseFloat(val) + 1 >= 0;\n}","map":{"version":3,"mappings":"AAAA;AACA,SAASA,OAAT,QAAwB,WAAxB;AACA,OAAO,SAASC,SAAT,CAAmBC,GAAnB,EAAwB;EAC3B,OAAO,CAACF,OAAO,CAACE,GAAD,CAAR,IAAkBA,GAAG,GAAGC,UAAU,CAACD,GAAD,CAAhB,GAAwB,CAAzB,IAA+B,CAAvD;AACH","names":["isArray","isNumeric","val"],"sources":["/Users/godsheritageadeoye/Documents/GitHub/Mern-Portfolio/client/node_modules/rxjs/src/internal/util/isNumeric.ts"],"sourcesContent":["import { isArray } from './isArray';\n\nexport function isNumeric(val: any): val is number | string {\n  // parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n  // ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n  // subtraction forces infinities to NaN\n  // adding 1 corrects loss of precision from parseFloat (#15100)\n  return !isArray(val) && (val - parseFloat(val) + 1) >= 0;\n}\n"]},"metadata":{},"sourceType":"module"}