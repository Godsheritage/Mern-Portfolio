{"ast":null,"code":"import _objectSpread from \"/Users/godsheritageadeoye/Documents/GitHub/Mern-Portfolio/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/Users/godsheritageadeoye/Documents/GitHub/Mern-Portfolio/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { useRef, useEffect, forwardRef, useState, useImperativeHandle, createElement } from 'react';\n\nvar noop = function noop() {};\n\nfunction useInterval(callback, delay, immediate) {\n  var savedCallback = useRef(noop);\n  useEffect(function () {\n    savedCallback.current = callback;\n  });\n  useEffect(function () {\n    if (!immediate) return;\n    if (delay === null || delay === false) return;\n    savedCallback.current();\n  }, [immediate]);\n  useEffect(function () {\n    if (delay === null || delay === false) return undefined;\n\n    var tick = function tick() {\n      return savedCallback.current();\n    };\n\n    var id = setInterval(tick, delay);\n    return function () {\n      return clearInterval(id);\n    };\n  }, [delay]);\n}\n\nfunction randomInt(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nvar LoadingBar = forwardRef(function (_ref, ref) {\n  var progress = _ref.progress,\n      _ref$height = _ref.height,\n      _height = _ref$height === void 0 ? 2 : _ref$height,\n      _ref$className = _ref.className,\n      _className = _ref$className === void 0 ? '' : _ref$className,\n      _ref$color = _ref.color,\n      _color = _ref$color === void 0 ? 'red' : _ref$color,\n      _ref$background = _ref.background,\n      _background = _ref$background === void 0 ? 'transparent' : _ref$background,\n      onLoaderFinished = _ref.onLoaderFinished,\n      _ref$transitionTime = _ref.transitionTime,\n      _transitionTime = _ref$transitionTime === void 0 ? 300 : _ref$transitionTime,\n      _ref$loaderSpeed = _ref.loaderSpeed,\n      _loaderSpeed = _ref$loaderSpeed === void 0 ? 500 : _ref$loaderSpeed,\n      _ref$waitingTime = _ref.waitingTime,\n      _waitingTime = _ref$waitingTime === void 0 ? 1000 : _ref$waitingTime,\n      _ref$shadow = _ref.shadow,\n      _shadow = _ref$shadow === void 0 ? true : _ref$shadow,\n      _ref$containerStyle = _ref.containerStyle,\n      _containerStyle = _ref$containerStyle === void 0 ? {} : _ref$containerStyle,\n      _ref$style = _ref.style,\n      _style = _ref$style === void 0 ? {} : _ref$style,\n      _ref$shadowStyle = _ref.shadowStyle,\n      shadowStyleProp = _ref$shadowStyle === void 0 ? {} : _ref$shadowStyle,\n      _ref$containerClassNa = _ref.containerClassName,\n      _containerClassName = _ref$containerClassNa === void 0 ? '' : _ref$containerClassNa;\n\n  var isMounted = useRef(false);\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      localProgress = _useState2[0],\n      localProgressSet = _useState2[1];\n\n  var _useState3 = useState({\n    active: false,\n    startingValue: 20,\n    refreshRate: 1000\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      pressedContinuous = _useState4[0],\n      setPressedContinuous = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      usingProps = _useState6[0],\n      setUsingProps = _useState6[1];\n\n  var _useState7 = useState({\n    active: false,\n    value: 20\n  }),\n      _useState8 = _slicedToArray(_useState7, 2),\n      pressedStaticStart = _useState8[0],\n      setStaticStartPressed = _useState8[1];\n\n  var initialLoaderStyle = {\n    height: '100%',\n    background: _color,\n    transition: \"all \".concat(_loaderSpeed, \"ms ease\"),\n    width: '0%'\n  };\n  var loaderContainerStyle = {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    height: _height,\n    background: _background,\n    zIndex: 99999999999,\n    width: 100 + '%'\n  };\n  var initialShadowStyles = {\n    boxShadow: \"0 0 10px \".concat(_color, \", 0 0 10px \").concat(_color),\n    width: '5%',\n    opacity: 1,\n    position: 'absolute',\n    height: '100%',\n    transition: \"all \".concat(_loaderSpeed, \"ms ease\"),\n    transform: 'rotate(3deg) translate(0px, -4px)',\n    left: '-10rem'\n  };\n\n  var _useState9 = useState(initialLoaderStyle),\n      _useState10 = _slicedToArray(_useState9, 2),\n      loaderStyle = _useState10[0],\n      loaderStyleSet = _useState10[1];\n\n  var _useState11 = useState(initialShadowStyles),\n      _useState12 = _slicedToArray(_useState11, 2),\n      shadowStyle = _useState12[0],\n      shadowStyleSet = _useState12[1];\n\n  useEffect(function () {\n    isMounted.current = true;\n    return function () {\n      isMounted.current = false;\n    };\n  }, []);\n  useImperativeHandle(ref, function () {\n    return {\n      continuousStart: function continuousStart(startingValue) {\n        var refreshRate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1000;\n        if (pressedStaticStart.active) return;\n\n        if (usingProps) {\n          console.warn(\"react-top-loading-bar: You can't use both controlling by props and ref methods to control the bar!\");\n          return;\n        }\n\n        var val = startingValue || randomInt(10, 20);\n        setPressedContinuous({\n          active: true,\n          refreshRate: refreshRate,\n          startingValue: startingValue\n        });\n        localProgressSet(val);\n        checkIfFull(val);\n      },\n      staticStart: function staticStart(startingValue) {\n        if (pressedContinuous.active) return;\n\n        if (usingProps) {\n          console.warn(\"react-top-loading-bar: You can't use both controlling by props and ref methods to control the bar!\");\n          return;\n        }\n\n        var val = startingValue || randomInt(30, 50);\n        setStaticStartPressed({\n          active: true,\n          value: val\n        });\n        localProgressSet(val);\n        checkIfFull(val);\n      },\n      complete: function complete() {\n        if (usingProps) {\n          console.warn(\"react-top-loading-bar: You can't use both controlling by props and ref methods to control the bar!\");\n          return;\n        }\n\n        localProgressSet(100);\n        checkIfFull(100);\n      }\n    };\n  });\n  useEffect(function () {\n    loaderStyleSet(_objectSpread(_objectSpread({}, loaderStyle), {}, {\n      background: _color\n    }));\n    shadowStyleSet(_objectSpread(_objectSpread({}, shadowStyle), {}, {\n      boxShadow: \"0 0 10px \".concat(_color, \", 0 0 5px \").concat(_color)\n    }));\n  }, [_color]);\n  useEffect(function () {\n    if (ref) {\n      if (ref && progress !== undefined) {\n        console.warn('react-top-loading-bar: You can\\'t use both controlling by props and ref methods to control the bar! Please use only props or only ref methods! Ref methods will override props if \"ref\" property is available.');\n        return;\n      }\n\n      checkIfFull(localProgress);\n      setUsingProps(false);\n    } else {\n      if (progress) checkIfFull(progress);\n      setUsingProps(true);\n    }\n  }, [progress]);\n\n  var checkIfFull = function checkIfFull(_progress) {\n    if (_progress >= 100) {\n      loaderStyleSet(_objectSpread(_objectSpread({}, loaderStyle), {}, {\n        width: '100%'\n      }));\n\n      if (_shadow) {\n        shadowStyleSet(_objectSpread(_objectSpread({}, shadowStyle), {}, {\n          left: _progress - 10 + '%'\n        }));\n      }\n\n      setTimeout(function () {\n        if (!isMounted.current) {\n          return;\n        }\n\n        loaderStyleSet(_objectSpread(_objectSpread({}, loaderStyle), {}, {\n          opacity: 0,\n          width: '100%',\n          transition: \"all \".concat(_transitionTime, \"ms ease-out\"),\n          color: _color\n        }));\n        setTimeout(function () {\n          if (!isMounted.current) {\n            return;\n          }\n\n          if (pressedContinuous.active) {\n            setPressedContinuous(_objectSpread(_objectSpread({}, pressedContinuous), {}, {\n              active: false\n            }));\n            localProgressSet(0);\n            checkIfFull(0);\n          }\n\n          if (pressedStaticStart.active) {\n            setStaticStartPressed(_objectSpread(_objectSpread({}, pressedStaticStart), {}, {\n              active: false\n            }));\n            localProgressSet(0);\n            checkIfFull(0);\n          }\n\n          if (onLoaderFinished) onLoaderFinished();\n          localProgressSet(0);\n          checkIfFull(0);\n        }, _transitionTime);\n      }, _waitingTime);\n    } else {\n      loaderStyleSet(function (_loaderStyle) {\n        return _objectSpread(_objectSpread({}, _loaderStyle), {}, {\n          width: _progress + '%',\n          opacity: 1,\n          transition: _progress > 0 ? \"all \".concat(_loaderSpeed, \"ms ease\") : ''\n        });\n      });\n\n      if (_shadow) {\n        shadowStyleSet(_objectSpread(_objectSpread({}, shadowStyle), {}, {\n          left: _progress - 5.5 + '%',\n          transition: _progress > 0 ? \"all \".concat(_loaderSpeed, \"ms ease\") : ''\n        }));\n      }\n    }\n  };\n\n  useInterval(function () {\n    var random = randomInt(10, 20);\n\n    if (localProgress + random < 90) {\n      localProgressSet(localProgress + random);\n      checkIfFull(localProgress + random);\n    }\n  }, pressedContinuous.active ? pressedContinuous.refreshRate : null);\n  return createElement(\"div\", {\n    className: _containerClassName,\n    style: _objectSpread(_objectSpread({}, loaderContainerStyle), _containerStyle)\n  }, createElement(\"div\", {\n    className: _className,\n    style: _objectSpread(_objectSpread({}, loaderStyle), _style)\n  }, _shadow ? createElement(\"div\", {\n    style: _objectSpread(_objectSpread({}, shadowStyle), shadowStyleProp)\n  }) : null));\n});\nexport default LoadingBar;","map":{"version":3,"mappings":"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","names":["noop","useInterval","callback","delay","immediate","savedCallback","useRef","useEffect","current","undefined","tick","id","setInterval","clearInterval","randomInt","min","max","Math","floor","random","LoadingBar","forwardRef","ref","progress","height","className","color","background","onLoaderFinished","transitionTime","loaderSpeed","waitingTime","shadow","containerStyle","style","shadowStyle","shadowStyleProp","containerClassName","isMounted","useState","localProgress","localProgressSet","active","startingValue","refreshRate","pressedContinuous","setPressedContinuous","usingProps","setUsingProps","value","pressedStaticStart","setStaticStartPressed","initialLoaderStyle","transition","width","loaderContainerStyle","position","top","left","zIndex","initialShadowStyles","boxShadow","opacity","transform","loaderStyle","loaderStyleSet","shadowStyleSet","useImperativeHandle","continuousStart","console","warn","val","checkIfFull","staticStart","complete","_progress","setTimeout","_loaderStyle","React"],"sources":["/Users/godsheritageadeoye/Documents/GitHub/Mern-Portfolio/client/node_modules/react-top-loading-bar/src/useInterval.ts","/Users/godsheritageadeoye/Documents/GitHub/Mern-Portfolio/client/node_modules/react-top-loading-bar/src/utils.ts","/Users/godsheritageadeoye/Documents/GitHub/Mern-Portfolio/client/node_modules/react-top-loading-bar/src/index.tsx"],"sourcesContent":["import { useEffect, useRef } from 'react'\n\n/** keep typescript happy */\nconst noop = () => {}\n\nexport function useInterval(\n  callback: () => void,\n  delay: number | null | false,\n  immediate?: boolean\n) {\n  const savedCallback = useRef(noop)\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback\n  })\n\n  // Execute callback if immediate is set.\n  useEffect(() => {\n    if (!immediate) return\n    if (delay === null || delay === false) return\n    savedCallback.current()\n  }, [immediate])\n\n  // Set up the interval.\n  useEffect(() => {\n    if (delay === null || delay === false) return undefined\n    const tick = () => savedCallback.current()\n    const id = setInterval(tick, delay)\n    return () => clearInterval(id)\n  }, [delay])\n}\n\nexport default useInterval\n","export function randomInt(min: number, max: number): number {\n  // @ts-ignore\n  return Math.floor(Math.random() * (max - min + 1) + min)\n}\n","import * as React from 'react'\nimport {\n  CSSProperties,\n  useEffect,\n  useState,\n  forwardRef,\n  useImperativeHandle,\n  useRef,\n} from 'react'\nimport { useInterval } from './useInterval'\nimport { randomInt } from './utils'\n\ntype IProps = {\n  progress?: number\n  color?: string\n  shadow?: boolean\n  background?: string\n  height?: number\n  onLoaderFinished?: () => void\n  className?: string\n  containerClassName?: string\n  loaderSpeed?: number\n  transitionTime?: number\n  waitingTime?: number\n  style?: CSSProperties\n  containerStyle?: CSSProperties\n  shadowStyle?: CSSProperties\n}\n\nexport type LoadingBarRef = {\n  continuousStart: (startingValue: number, refreshRate: number) => void\n  staticStart: (startingValue: number) => void\n  complete: () => void;\n}\n\nconst LoadingBar = forwardRef<LoadingBarRef, IProps>(\n  (\n    {\n      progress,\n      height = 2,\n      className = '',\n      color = 'red',\n      background = 'transparent',\n      onLoaderFinished,\n      transitionTime = 300,\n      loaderSpeed = 500,\n      waitingTime = 1000,\n      shadow = true,\n      containerStyle = {},\n      style = {},\n      shadowStyle: shadowStyleProp = {},\n      containerClassName = ''\n    },\n    ref\n  ) => {\n    const isMounted = useRef(false);\n    const [localProgress, localProgressSet] = useState<number>(0)\n    const [pressedContinuous, setPressedContinuous] = useState<{\n      active: boolean\n      startingValue: number\n      refreshRate: number\n    }>({ active: false, startingValue: 20, refreshRate: 1000 })\n    const [usingProps, setUsingProps] = useState(false)\n\n    const [pressedStaticStart, setStaticStartPressed] = useState<{\n      active: boolean\n      value: number\n    }>({ active: false, value: 20 })\n\n    const initialLoaderStyle: CSSProperties = {\n      height: '100%',\n      background: color,\n      transition: `all ${loaderSpeed}ms ease`,\n      width: '0%',\n    }\n\n    const loaderContainerStyle: CSSProperties = {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      height,\n      background,\n      zIndex: 99999999999,\n      width: 100 + '%',\n    }\n\n    const initialShadowStyles: CSSProperties = {\n      boxShadow: `0 0 10px ${color}, 0 0 10px ${color}`,\n      width: '5%',\n      opacity: 1,\n      position: 'absolute',\n      height: '100%',\n      transition: `all ${loaderSpeed}ms ease`,\n      transform: 'rotate(3deg) translate(0px, -4px)',\n      left: '-10rem',\n    }\n\n    const [loaderStyle, loaderStyleSet] = useState<CSSProperties>(\n      initialLoaderStyle\n    )\n    const [shadowStyle, shadowStyleSet] = useState<CSSProperties>(\n      initialShadowStyles\n    )\n\n    useEffect(() => {\n      isMounted.current = true;\n      return () => {\n        isMounted.current = false;\n      }\n    }, []);\n\n    useImperativeHandle(ref, () => ({\n      continuousStart(startingValue: number, refreshRate: number = 1000) {\n        if (pressedStaticStart.active) return\n        if (usingProps) {\n          console.warn(\n            \"react-top-loading-bar: You can't use both controlling by props and ref methods to control the bar!\"\n          )\n          return\n        }\n\n        const val = startingValue || randomInt(10, 20)\n        setPressedContinuous({\n          active: true,\n          refreshRate,\n          startingValue,\n        })\n        localProgressSet(val)\n        checkIfFull(val)\n      },\n      staticStart(startingValue: number) {\n        if (pressedContinuous.active) return\n        if (usingProps) {\n          console.warn(\n            \"react-top-loading-bar: You can't use both controlling by props and ref methods to control the bar!\"\n          )\n          return\n        }\n\n        const val = startingValue || randomInt(30, 50)\n        setStaticStartPressed({\n          active: true,\n          value: val,\n        })\n        localProgressSet(val)\n        checkIfFull(val)\n      },\n      complete() {\n        if (usingProps) {\n          console.warn(\n            \"react-top-loading-bar: You can't use both controlling by props and ref methods to control the bar!\"\n          )\n          return\n        }\n        localProgressSet(100)\n        checkIfFull(100)\n      },\n    }))\n\n    useEffect(() => {\n      loaderStyleSet({\n        ...loaderStyle,\n        background: color,\n      })\n\n      shadowStyleSet({\n        ...shadowStyle,\n        boxShadow: `0 0 10px ${color}, 0 0 5px ${color}`,\n      })\n    }, [color])\n\n    useEffect(() => {\n      if (ref) {\n        if (ref && progress !== undefined) {\n          console.warn(\n            'react-top-loading-bar: You can\\'t use both controlling by props and ref methods to control the bar! Please use only props or only ref methods! Ref methods will override props if \"ref\" property is available.'\n          )\n          return\n        }\n        checkIfFull(localProgress)\n        setUsingProps(false)\n      } else {\n        if (progress) checkIfFull(progress)\n\n        setUsingProps(true)\n      }\n    }, [progress])\n\n    const checkIfFull = (_progress: number) => {\n      if (_progress >= 100) {\n        // now it should wait a little bit\n        loaderStyleSet({\n          ...loaderStyle,\n          width: '100%',\n        })\n        if (shadow) {\n          shadowStyleSet({\n            ...shadowStyle,\n            left: _progress - 10 + '%',\n          })\n        }\n\n        setTimeout(() => {\n          if (!isMounted.current) {\n            return;\n          }\n          // now it can fade out\n          loaderStyleSet({\n            ...loaderStyle,\n            opacity: 0,\n            width: '100%',\n            transition: `all ${transitionTime}ms ease-out`,\n            color: color,\n          })\n\n          setTimeout(() => {\n            if (!isMounted.current) {\n              return;\n            }\n            // here we wait for it to fade\n            if (pressedContinuous.active) {\n              // if we have continous loader just ending, we kill it and reset it\n              setPressedContinuous({\n                ...pressedContinuous,\n                active: false,\n              })\n              localProgressSet(0)\n              checkIfFull(0)\n            }\n\n            if (pressedStaticStart.active) {\n              setStaticStartPressed({\n                ...pressedStaticStart,\n                active: false,\n              })\n              localProgressSet(0)\n              checkIfFull(0)\n            }\n\n            if (onLoaderFinished) onLoaderFinished()\n            localProgressSet(0)\n            checkIfFull(0)\n          }, transitionTime)\n        }, waitingTime)\n      } else {\n        loaderStyleSet((_loaderStyle) => {\n          return {\n            ..._loaderStyle,\n            width: _progress + '%',\n            opacity: 1,\n            transition: _progress > 0 ? `all ${loaderSpeed}ms ease` : '',\n          }\n        })\n\n        if (shadow) {\n          shadowStyleSet({\n            ...shadowStyle,\n            left: _progress - 5.5 + '%',\n            transition: _progress > 0 ? `all ${loaderSpeed}ms ease` : '',\n          })\n        }\n      }\n    }\n\n    useInterval(\n      () => {\n        const random = randomInt(10, 20)\n\n        if (localProgress + random < 90) {\n          localProgressSet(localProgress + random)\n          checkIfFull(localProgress + random)\n        }\n      },\n      pressedContinuous.active ? pressedContinuous.refreshRate : null\n    )\n\n    return (\n      <div className={containerClassName} style={{...loaderContainerStyle, ...containerStyle}}>\n        <div className={className} style={{...loaderStyle, ...style}}>\n          {shadow ? <div style={{...shadowStyle, ...shadowStyleProp}} /> : null}\n        </div>\n      </div>\n    )\n  }\n)\n\nexport {\n  IProps,\n}\n\nexport default LoadingBar\n"]},"metadata":{},"sourceType":"module"}