{"ast":null,"code":"/** PURE_IMPORTS_START _Subscriber PURE_IMPORTS_END */\nimport { Subscriber } from '../Subscriber';\nexport function canReportError(observer) {\n  while (observer) {\n    var _a = observer,\n        closed_1 = _a.closed,\n        destination = _a.destination,\n        isStopped = _a.isStopped;\n\n    if (closed_1 || isStopped) {\n      return false;\n    } else if (destination && destination instanceof Subscriber) {\n      observer = destination;\n    } else {\n      observer = null;\n    }\n  }\n\n  return true;\n}","map":{"version":3,"mappings":"AAAA;AACA,SAASA,UAAT,QAA2B,eAA3B;AACA,OAAO,SAASC,cAAT,CAAwBC,QAAxB,EAAkC;EACrC,OAAOA,QAAP,EAAiB;IACb,IAAIC,EAAE,GAAGD,QAAT;IAAA,IAAmBE,QAAQ,GAAGD,EAAE,CAACE,MAAjC;IAAA,IAAyCC,WAAW,GAAGH,EAAE,CAACG,WAA1D;IAAA,IAAuEC,SAAS,GAAGJ,EAAE,CAACI,SAAtF;;IACA,IAAIH,QAAQ,IAAIG,SAAhB,EAA2B;MACvB,OAAO,KAAP;IACH,CAFD,MAGK,IAAID,WAAW,IAAIA,WAAW,YAAYN,UAA1C,EAAsD;MACvDE,QAAQ,GAAGI,WAAX;IACH,CAFI,MAGA;MACDJ,QAAQ,GAAG,IAAX;IACH;EACJ;;EACD,OAAO,IAAP;AACH","names":["Subscriber","canReportError","observer","_a","closed_1","destination","isStopped"],"sources":["/Users/godsheritageadeoye/Documents/GitHub/Mern-Portfolio/client/node_modules/rxjs/src/internal/util/canReportError.ts"],"sourcesContent":["import { Subscriber } from '../Subscriber';\nimport { Subject } from '../Subject';\n\n/**\n * Determines whether the ErrorObserver is closed or stopped or has a\n * destination that is closed or stopped - in which case errors will\n * need to be reported via a different mechanism.\n * @param observer the observer\n */\nexport function canReportError(observer: Subscriber<any> | Subject<any>): boolean {\n  while (observer) {\n    const { closed, destination, isStopped } = observer as any;\n    if (closed || isStopped) {\n      return false;\n    } else if (destination && destination instanceof Subscriber) {\n      observer = destination;\n    } else {\n      observer = null;\n    }\n  }\n  return true;\n}\n"]},"metadata":{},"sourceType":"module"}