{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_AsyncAction PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { AsyncAction } from './AsyncAction';\n\nvar QueueAction = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(QueueAction, _super);\n\n  function QueueAction(scheduler, work) {\n    var _this = _super.call(this, scheduler, work) || this;\n\n    _this.scheduler = scheduler;\n    _this.work = work;\n    return _this;\n  }\n\n  QueueAction.prototype.schedule = function (state, delay) {\n    if (delay === void 0) {\n      delay = 0;\n    }\n\n    if (delay > 0) {\n      return _super.prototype.schedule.call(this, state, delay);\n    }\n\n    this.delay = delay;\n    this.state = state;\n    this.scheduler.flush(this);\n    return this;\n  };\n\n  QueueAction.prototype.execute = function (state, delay) {\n    return delay > 0 || this.closed ? _super.prototype.execute.call(this, state, delay) : this._execute(state, delay);\n  };\n\n  QueueAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n    if (delay === void 0) {\n      delay = 0;\n    }\n\n    if (delay !== null && delay > 0 || delay === null && this.delay > 0) {\n      return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);\n    }\n\n    return scheduler.flush(this);\n  };\n\n  return QueueAction;\n}(AsyncAction);\n\nexport { QueueAction };","map":{"version":3,"mappings":"AAAA;AACA,OAAO,KAAKA,OAAZ,MAAyB,OAAzB;AACA,SAASC,WAAT,QAA4B,eAA5B;;AACA,IAAIC,WAAW,GAAG,aAAe,UAAUC,MAAV,EAAkB;EAC/CH,OAAO,CAACI,SAAR,CAAkBF,WAAlB,EAA+BC,MAA/B;;EACA,SAASD,WAAT,CAAqBG,SAArB,EAAgCC,IAAhC,EAAsC;IAClC,IAAIC,KAAK,GAAGJ,MAAM,CAACK,IAAP,CAAY,IAAZ,EAAkBH,SAAlB,EAA6BC,IAA7B,KAAsC,IAAlD;;IACAC,KAAK,CAACF,SAAN,GAAkBA,SAAlB;IACAE,KAAK,CAACD,IAAN,GAAaA,IAAb;IACA,OAAOC,KAAP;EACH;;EACDL,WAAW,CAACO,SAAZ,CAAsBC,QAAtB,GAAiC,UAAUC,KAAV,EAAiBC,KAAjB,EAAwB;IACrD,IAAIA,KAAK,KAAK,KAAK,CAAnB,EAAsB;MAClBA,KAAK,GAAG,CAAR;IACH;;IACD,IAAIA,KAAK,GAAG,CAAZ,EAAe;MACX,OAAOT,MAAM,CAACM,SAAP,CAAiBC,QAAjB,CAA0BF,IAA1B,CAA+B,IAA/B,EAAqCG,KAArC,EAA4CC,KAA5C,CAAP;IACH;;IACD,KAAKA,KAAL,GAAaA,KAAb;IACA,KAAKD,KAAL,GAAaA,KAAb;IACA,KAAKN,SAAL,CAAeQ,KAAf,CAAqB,IAArB;IACA,OAAO,IAAP;EACH,CAXD;;EAYAX,WAAW,CAACO,SAAZ,CAAsBK,OAAtB,GAAgC,UAAUH,KAAV,EAAiBC,KAAjB,EAAwB;IACpD,OAAQA,KAAK,GAAG,CAAR,IAAa,KAAKG,MAAnB,GACHZ,MAAM,CAACM,SAAP,CAAiBK,OAAjB,CAAyBN,IAAzB,CAA8B,IAA9B,EAAoCG,KAApC,EAA2CC,KAA3C,CADG,GAEH,KAAKI,QAAL,CAAcL,KAAd,EAAqBC,KAArB,CAFJ;EAGH,CAJD;;EAKAV,WAAW,CAACO,SAAZ,CAAsBQ,cAAtB,GAAuC,UAAUZ,SAAV,EAAqBa,EAArB,EAAyBN,KAAzB,EAAgC;IACnE,IAAIA,KAAK,KAAK,KAAK,CAAnB,EAAsB;MAClBA,KAAK,GAAG,CAAR;IACH;;IACD,IAAKA,KAAK,KAAK,IAAV,IAAkBA,KAAK,GAAG,CAA3B,IAAkCA,KAAK,KAAK,IAAV,IAAkB,KAAKA,KAAL,GAAa,CAArE,EAAyE;MACrE,OAAOT,MAAM,CAACM,SAAP,CAAiBQ,cAAjB,CAAgCT,IAAhC,CAAqC,IAArC,EAA2CH,SAA3C,EAAsDa,EAAtD,EAA0DN,KAA1D,CAAP;IACH;;IACD,OAAOP,SAAS,CAACQ,KAAV,CAAgB,IAAhB,CAAP;EACH,CARD;;EASA,OAAOX,WAAP;AACH,CAnCgC,CAmC/BD,WAnC+B,CAAjC;;AAoCA,SAASC,WAAT","names":["tslib_1","QueueAction","_super","scheduler","work","_this","state","delay","prototype","schedule","call","execute","requestAsyncId","id"],"sources":["/Users/godsheritageadeoye/Documents/GitHub/Mern-Portfolio/client/node_modules/rxjs/src/internal/scheduler/QueueAction.ts"],"sourcesContent":["import { AsyncAction } from './AsyncAction';\nimport { Subscription } from '../Subscription';\nimport { QueueScheduler } from './QueueScheduler';\nimport { SchedulerAction } from '../types';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class QueueAction<T> extends AsyncAction<T> {\n\n  constructor(protected scheduler: QueueScheduler,\n              protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (delay > 0) {\n      return super.schedule(state, delay);\n    }\n    this.delay = delay;\n    this.state = state;\n    this.scheduler.flush(this);\n    return this;\n  }\n\n  public execute(state: T, delay: number): any {\n    return (delay > 0 || this.closed) ?\n      super.execute(state, delay) :\n      this._execute(state, delay) ;\n  }\n\n  protected requestAsyncId(scheduler: QueueScheduler, id?: any, delay: number = 0): any {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Otherwise flush the scheduler starting with this action.\n    return scheduler.flush(this);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}