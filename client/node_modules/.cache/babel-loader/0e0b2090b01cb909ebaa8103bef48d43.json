{"ast":null,"code":"/** PURE_IMPORTS_START _Observable,_Subscription,_symbol_observable PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { observable as Symbol_observable } from '../symbol/observable';\nexport function scheduleObservable(input, scheduler) {\n  return new Observable(function (subscriber) {\n    var sub = new Subscription();\n    sub.add(scheduler.schedule(function () {\n      var observable = input[Symbol_observable]();\n      sub.add(observable.subscribe({\n        next: function next(value) {\n          sub.add(scheduler.schedule(function () {\n            return subscriber.next(value);\n          }));\n        },\n        error: function error(err) {\n          sub.add(scheduler.schedule(function () {\n            return subscriber.error(err);\n          }));\n        },\n        complete: function complete() {\n          sub.add(scheduler.schedule(function () {\n            return subscriber.complete();\n          }));\n        }\n      }));\n    }));\n    return sub;\n  });\n}","map":{"version":3,"mappings":"AAAA;AACA,SAASA,UAAT,QAA2B,eAA3B;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,SAASC,UAAU,IAAIC,iBAAvB,QAAgD,sBAAhD;AACA,OAAO,SAASC,kBAAT,CAA4BC,KAA5B,EAAmCC,SAAnC,EAA8C;EACjD,OAAO,IAAIN,UAAJ,CAAe,UAAUO,UAAV,EAAsB;IACxC,IAAIC,GAAG,GAAG,IAAIP,YAAJ,EAAV;IACAO,GAAG,CAACC,GAAJ,CAAQH,SAAS,CAACI,QAAV,CAAmB,YAAY;MACnC,IAAIR,UAAU,GAAGG,KAAK,CAACF,iBAAD,CAAL,EAAjB;MACAK,GAAG,CAACC,GAAJ,CAAQP,UAAU,CAACS,SAAX,CAAqB;QACzBC,IAAI,EAAE,cAAUC,KAAV,EAAiB;UAAEL,GAAG,CAACC,GAAJ,CAAQH,SAAS,CAACI,QAAV,CAAmB,YAAY;YAAE,OAAOH,UAAU,CAACK,IAAX,CAAgBC,KAAhB,CAAP;UAAgC,CAAjE,CAAR;QAA8E,CAD9E;QAEzBC,KAAK,EAAE,eAAUC,GAAV,EAAe;UAAEP,GAAG,CAACC,GAAJ,CAAQH,SAAS,CAACI,QAAV,CAAmB,YAAY;YAAE,OAAOH,UAAU,CAACO,KAAX,CAAiBC,GAAjB,CAAP;UAA+B,CAAhE,CAAR;QAA6E,CAF5E;QAGzBC,QAAQ,EAAE,oBAAY;UAAER,GAAG,CAACC,GAAJ,CAAQH,SAAS,CAACI,QAAV,CAAmB,YAAY;YAAE,OAAOH,UAAU,CAACS,QAAX,EAAP;UAA+B,CAAhE,CAAR;QAA6E;MAH5E,CAArB,CAAR;IAKH,CAPO,CAAR;IAQA,OAAOR,GAAP;EACH,CAXM,CAAP;AAYH","names":["Observable","Subscription","observable","scheduleObservable","input","scheduler","subscriber","sub","add","schedule","next","value","error","err","complete"],"sources":["/Users/godsheritageadeoye/Documents/GitHub/Mern-Portfolio/client/node_modules/rxjs/src/internal/scheduled/scheduleObservable.ts"],"sourcesContent":["import { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { observable as Symbol_observable } from '../symbol/observable';\nimport { InteropObservable, SchedulerLike, Subscribable } from '../types';\n\nexport function scheduleObservable<T>(input: InteropObservable<T>, scheduler: SchedulerLike) {\n  return new Observable<T>(subscriber => {\n    const sub = new Subscription();\n    sub.add(scheduler.schedule(() => {\n      const observable: Subscribable<T> = input[Symbol_observable]();\n      sub.add(observable.subscribe({\n        next(value) { sub.add(scheduler.schedule(() => subscriber.next(value))); },\n        error(err) { sub.add(scheduler.schedule(() => subscriber.error(err))); },\n        complete() { sub.add(scheduler.schedule(() => subscriber.complete())); },\n      }));\n    }));\n    return sub;\n  });\n}\n"]},"metadata":{},"sourceType":"module"}