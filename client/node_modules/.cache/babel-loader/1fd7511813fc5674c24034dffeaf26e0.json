{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_AsyncScheduler PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { AsyncScheduler } from './AsyncScheduler';\n\nvar AsapScheduler = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(AsapScheduler, _super);\n\n  function AsapScheduler() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  AsapScheduler.prototype.flush = function (action) {\n    this.active = true;\n    this.scheduled = undefined;\n    var actions = this.actions;\n    var error;\n    var index = -1;\n    var count = actions.length;\n    action = action || actions.shift();\n\n    do {\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    } while (++index < count && (action = actions.shift()));\n\n    this.active = false;\n\n    if (error) {\n      while (++index < count && (action = actions.shift())) {\n        action.unsubscribe();\n      }\n\n      throw error;\n    }\n  };\n\n  return AsapScheduler;\n}(AsyncScheduler);\n\nexport { AsapScheduler };","map":{"version":3,"mappings":"AAAA;AACA,OAAO,KAAKA,OAAZ,MAAyB,OAAzB;AACA,SAASC,cAAT,QAA+B,kBAA/B;;AACA,IAAIC,aAAa,GAAG,aAAe,UAAUC,MAAV,EAAkB;EACjDH,OAAO,CAACI,SAAR,CAAkBF,aAAlB,EAAiCC,MAAjC;;EACA,SAASD,aAAT,GAAyB;IACrB,OAAOC,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACE,KAAP,CAAa,IAAb,EAAmBC,SAAnB,CAAnB,IAAoD,IAA3D;EACH;;EACDJ,aAAa,CAACK,SAAd,CAAwBC,KAAxB,GAAgC,UAAUC,MAAV,EAAkB;IAC9C,KAAKC,MAAL,GAAc,IAAd;IACA,KAAKC,SAAL,GAAiBC,SAAjB;IACA,IAAIC,OAAO,GAAG,KAAKA,OAAnB;IACA,IAAIC,KAAJ;IACA,IAAIC,KAAK,GAAG,CAAC,CAAb;IACA,IAAIC,KAAK,GAAGH,OAAO,CAACI,MAApB;IACAR,MAAM,GAAGA,MAAM,IAAII,OAAO,CAACK,KAAR,EAAnB;;IACA,GAAG;MACC,IAAIJ,KAAK,GAAGL,MAAM,CAACU,OAAP,CAAeV,MAAM,CAACW,KAAtB,EAA6BX,MAAM,CAACY,KAApC,CAAZ,EAAwD;QACpD;MACH;IACJ,CAJD,QAIS,EAAEN,KAAF,GAAUC,KAAV,KAAoBP,MAAM,GAAGI,OAAO,CAACK,KAAR,EAA7B,CAJT;;IAKA,KAAKR,MAAL,GAAc,KAAd;;IACA,IAAII,KAAJ,EAAW;MACP,OAAO,EAAEC,KAAF,GAAUC,KAAV,KAAoBP,MAAM,GAAGI,OAAO,CAACK,KAAR,EAA7B,CAAP,EAAsD;QAClDT,MAAM,CAACa,WAAP;MACH;;MACD,MAAMR,KAAN;IACH;EACJ,CApBD;;EAqBA,OAAOZ,aAAP;AACH,CA3BkC,CA2BjCD,cA3BiC,CAAnC;;AA4BA,SAASC,aAAT","names":["tslib_1","AsapScheduler","_super","flush","active","actions","error","index","action","count"],"sources":["/Users/godsheritageadeoye/Documents/GitHub/Mern-Portfolio/client/node_modules/rxjs/src/internal/scheduler/AsapScheduler.ts"],"sourcesContent":["import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\nexport class AsapScheduler extends AsyncScheduler {\n  public flush(action?: AsyncAction<any>): void {\n\n    this.active = true;\n    this.scheduled = undefined;\n\n    const {actions} = this;\n    let error: any;\n    let index: number = -1;\n    let count: number = actions.length;\n    action = action || actions.shift();\n\n    do {\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    } while (++index < count && (action = actions.shift()));\n\n    this.active = false;\n\n    if (error) {\n      while (++index < count && (action = actions.shift())) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}