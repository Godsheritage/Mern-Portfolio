{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_AsyncAction PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { AsyncAction } from './AsyncAction';\n\nvar AnimationFrameAction = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(AnimationFrameAction, _super);\n\n  function AnimationFrameAction(scheduler, work) {\n    var _this = _super.call(this, scheduler, work) || this;\n\n    _this.scheduler = scheduler;\n    _this.work = work;\n    return _this;\n  }\n\n  AnimationFrameAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n    if (delay === void 0) {\n      delay = 0;\n    }\n\n    if (delay !== null && delay > 0) {\n      return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);\n    }\n\n    scheduler.actions.push(this);\n    return scheduler.scheduled || (scheduler.scheduled = requestAnimationFrame(function () {\n      return scheduler.flush(null);\n    }));\n  };\n\n  AnimationFrameAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n    if (delay === void 0) {\n      delay = 0;\n    }\n\n    if (delay !== null && delay > 0 || delay === null && this.delay > 0) {\n      return _super.prototype.recycleAsyncId.call(this, scheduler, id, delay);\n    }\n\n    if (scheduler.actions.length === 0) {\n      cancelAnimationFrame(id);\n      scheduler.scheduled = undefined;\n    }\n\n    return undefined;\n  };\n\n  return AnimationFrameAction;\n}(AsyncAction);\n\nexport { AnimationFrameAction };","map":{"version":3,"mappings":"AAAA;AACA,OAAO,KAAKA,OAAZ,MAAyB,OAAzB;AACA,SAASC,WAAT,QAA4B,eAA5B;;AACA,IAAIC,oBAAoB,GAAG,aAAe,UAAUC,MAAV,EAAkB;EACxDH,OAAO,CAACI,SAAR,CAAkBF,oBAAlB,EAAwCC,MAAxC;;EACA,SAASD,oBAAT,CAA8BG,SAA9B,EAAyCC,IAAzC,EAA+C;IAC3C,IAAIC,KAAK,GAAGJ,MAAM,CAACK,IAAP,CAAY,IAAZ,EAAkBH,SAAlB,EAA6BC,IAA7B,KAAsC,IAAlD;;IACAC,KAAK,CAACF,SAAN,GAAkBA,SAAlB;IACAE,KAAK,CAACD,IAAN,GAAaA,IAAb;IACA,OAAOC,KAAP;EACH;;EACDL,oBAAoB,CAACO,SAArB,CAA+BC,cAA/B,GAAgD,UAAUL,SAAV,EAAqBM,EAArB,EAAyBC,KAAzB,EAAgC;IAC5E,IAAIA,KAAK,KAAK,KAAK,CAAnB,EAAsB;MAClBA,KAAK,GAAG,CAAR;IACH;;IACD,IAAIA,KAAK,KAAK,IAAV,IAAkBA,KAAK,GAAG,CAA9B,EAAiC;MAC7B,OAAOT,MAAM,CAACM,SAAP,CAAiBC,cAAjB,CAAgCF,IAAhC,CAAqC,IAArC,EAA2CH,SAA3C,EAAsDM,EAAtD,EAA0DC,KAA1D,CAAP;IACH;;IACDP,SAAS,CAACQ,OAAV,CAAkBC,IAAlB,CAAuB,IAAvB;IACA,OAAOT,SAAS,CAACU,SAAV,KAAwBV,SAAS,CAACU,SAAV,GAAsBC,qBAAqB,CAAC,YAAY;MAAE,OAAOX,SAAS,CAACY,KAAV,CAAgB,IAAhB,CAAP;IAA+B,CAA9C,CAAnE,CAAP;EACH,CATD;;EAUAf,oBAAoB,CAACO,SAArB,CAA+BS,cAA/B,GAAgD,UAAUb,SAAV,EAAqBM,EAArB,EAAyBC,KAAzB,EAAgC;IAC5E,IAAIA,KAAK,KAAK,KAAK,CAAnB,EAAsB;MAClBA,KAAK,GAAG,CAAR;IACH;;IACD,IAAKA,KAAK,KAAK,IAAV,IAAkBA,KAAK,GAAG,CAA3B,IAAkCA,KAAK,KAAK,IAAV,IAAkB,KAAKA,KAAL,GAAa,CAArE,EAAyE;MACrE,OAAOT,MAAM,CAACM,SAAP,CAAiBS,cAAjB,CAAgCV,IAAhC,CAAqC,IAArC,EAA2CH,SAA3C,EAAsDM,EAAtD,EAA0DC,KAA1D,CAAP;IACH;;IACD,IAAIP,SAAS,CAACQ,OAAV,CAAkBM,MAAlB,KAA6B,CAAjC,EAAoC;MAChCC,oBAAoB,CAACT,EAAD,CAApB;MACAN,SAAS,CAACU,SAAV,GAAsBM,SAAtB;IACH;;IACD,OAAOA,SAAP;EACH,CAZD;;EAaA,OAAOnB,oBAAP;AACH,CAhCyC,CAgCxCD,WAhCwC,CAA1C;;AAiCA,SAASC,oBAAT","names":["tslib_1","AnimationFrameAction","_super","scheduler","work","_this","delay","requestAsyncId","call","id","requestAnimationFrame","cancelAnimationFrame","undefined"],"sources":["/Users/godsheritageadeoye/Documents/GitHub/Mern-Portfolio/client/node_modules/rxjs/src/internal/scheduler/AnimationFrameAction.ts"],"sourcesContent":["import { AsyncAction } from './AsyncAction';\nimport { AnimationFrameScheduler } from './AnimationFrameScheduler';\nimport { SchedulerAction } from '../types';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class AnimationFrameAction<T> extends AsyncAction<T> {\n\n  constructor(protected scheduler: AnimationFrameScheduler,\n              protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  protected requestAsyncId(scheduler: AnimationFrameScheduler, id?: any, delay: number = 0): any {\n    // If delay is greater than 0, request as an async action.\n    if (delay !== null && delay > 0) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Push the action to the end of the scheduler queue.\n    scheduler.actions.push(this);\n    // If an animation frame has already been requested, don't request another\n    // one. If an animation frame hasn't been requested yet, request one. Return\n    // the current animation frame request id.\n    return scheduler.scheduled || (scheduler.scheduled = requestAnimationFrame(\n      () => scheduler.flush(null)));\n  }\n  protected recycleAsyncId(scheduler: AnimationFrameScheduler, id?: any, delay: number = 0): any {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n      return super.recycleAsyncId(scheduler, id, delay);\n    }\n    // If the scheduler queue is empty, cancel the requested animation frame and\n    // set the scheduled flag to undefined so the next AnimationFrameAction will\n    // request its own.\n    if (scheduler.actions.length === 0) {\n      cancelAnimationFrame(id);\n      scheduler.scheduled = undefined;\n    }\n    // Return undefined so the action knows to request a new async id if it's rescheduled.\n    return undefined;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}