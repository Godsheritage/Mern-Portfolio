{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_Subscription PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscription } from '../Subscription';\n\nvar Action = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(Action, _super);\n\n  function Action(scheduler, work) {\n    return _super.call(this) || this;\n  }\n\n  Action.prototype.schedule = function (state, delay) {\n    if (delay === void 0) {\n      delay = 0;\n    }\n\n    return this;\n  };\n\n  return Action;\n}(Subscription);\n\nexport { Action };","map":{"version":3,"mappings":"AAAA;AACA,OAAO,KAAKA,OAAZ,MAAyB,OAAzB;AACA,SAASC,YAAT,QAA6B,iBAA7B;;AACA,IAAIC,MAAM,GAAG,aAAe,UAAUC,MAAV,EAAkB;EAC1CH,OAAO,CAACI,SAAR,CAAkBF,MAAlB,EAA0BC,MAA1B;;EACA,SAASD,MAAT,CAAgBG,SAAhB,EAA2BC,IAA3B,EAAiC;IAC7B,OAAOH,MAAM,CAACI,IAAP,CAAY,IAAZ,KAAqB,IAA5B;EACH;;EACDL,MAAM,CAACM,SAAP,CAAiBC,QAAjB,GAA4B,UAAUC,KAAV,EAAiBC,KAAjB,EAAwB;IAChD,IAAIA,KAAK,KAAK,KAAK,CAAnB,EAAsB;MAClBA,KAAK,GAAG,CAAR;IACH;;IACD,OAAO,IAAP;EACH,CALD;;EAMA,OAAOT,MAAP;AACH,CAZ2B,CAY1BD,YAZ0B,CAA5B;;AAaA,SAASC,MAAT","names":["tslib_1","Action","_super","scheduler","state","delay"],"sources":["/Users/godsheritageadeoye/Documents/GitHub/Mern-Portfolio/client/node_modules/rxjs/src/internal/scheduler/Action.ts"],"sourcesContent":["import { Scheduler } from '../Scheduler';\nimport { Subscription } from '../Subscription';\nimport { SchedulerAction } from '../types';\n\n/**\n * A unit of work to be executed in a `scheduler`. An action is typically\n * created from within a {@link SchedulerLike} and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * class Action<T> extends Subscription {\n *   new (scheduler: Scheduler, work: (state?: T) => void);\n *   schedule(state?: T, delay: number = 0): Subscription;\n * }\n * ```\n *\n * @class Action<T>\n */\nexport class Action<T> extends Subscription {\n  constructor(scheduler: Scheduler, work: (this: SchedulerAction<T>, state?: T) => void) {\n    super();\n  }\n  /**\n   * Schedules this action on its parent {@link SchedulerLike} for execution. May be passed\n   * some context object, `state`. May happen at some point in the future,\n   * according to the `delay` parameter, if specified.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler.\n   * @return {void}\n   */\n  public schedule(state?: T, delay: number = 0): Subscription {\n    return this;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}