{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_AsyncAction,_AsyncScheduler PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\nvar VirtualTimeScheduler = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(VirtualTimeScheduler, _super);\n\n  function VirtualTimeScheduler(SchedulerAction, maxFrames) {\n    if (SchedulerAction === void 0) {\n      SchedulerAction = VirtualAction;\n    }\n\n    if (maxFrames === void 0) {\n      maxFrames = Number.POSITIVE_INFINITY;\n    }\n\n    var _this = _super.call(this, SchedulerAction, function () {\n      return _this.frame;\n    }) || this;\n\n    _this.maxFrames = maxFrames;\n    _this.frame = 0;\n    _this.index = -1;\n    return _this;\n  }\n\n  VirtualTimeScheduler.prototype.flush = function () {\n    var _a = this,\n        actions = _a.actions,\n        maxFrames = _a.maxFrames;\n\n    var error, action;\n\n    while ((action = actions[0]) && action.delay <= maxFrames) {\n      actions.shift();\n      this.frame = action.delay;\n\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    }\n\n    if (error) {\n      while (action = actions.shift()) {\n        action.unsubscribe();\n      }\n\n      throw error;\n    }\n  };\n\n  VirtualTimeScheduler.frameTimeFactor = 10;\n  return VirtualTimeScheduler;\n}(AsyncScheduler);\n\nexport { VirtualTimeScheduler };\n\nvar VirtualAction = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(VirtualAction, _super);\n\n  function VirtualAction(scheduler, work, index) {\n    if (index === void 0) {\n      index = scheduler.index += 1;\n    }\n\n    var _this = _super.call(this, scheduler, work) || this;\n\n    _this.scheduler = scheduler;\n    _this.work = work;\n    _this.index = index;\n    _this.active = true;\n    _this.index = scheduler.index = index;\n    return _this;\n  }\n\n  VirtualAction.prototype.schedule = function (state, delay) {\n    if (delay === void 0) {\n      delay = 0;\n    }\n\n    if (!this.id) {\n      return _super.prototype.schedule.call(this, state, delay);\n    }\n\n    this.active = false;\n    var action = new VirtualAction(this.scheduler, this.work);\n    this.add(action);\n    return action.schedule(state, delay);\n  };\n\n  VirtualAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n    if (delay === void 0) {\n      delay = 0;\n    }\n\n    this.delay = scheduler.frame + delay;\n    var actions = scheduler.actions;\n    actions.push(this);\n    actions.sort(VirtualAction.sortActions);\n    return true;\n  };\n\n  VirtualAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n    if (delay === void 0) {\n      delay = 0;\n    }\n\n    return undefined;\n  };\n\n  VirtualAction.prototype._execute = function (state, delay) {\n    if (this.active === true) {\n      return _super.prototype._execute.call(this, state, delay);\n    }\n  };\n\n  VirtualAction.sortActions = function (a, b) {\n    if (a.delay === b.delay) {\n      if (a.index === b.index) {\n        return 0;\n      } else if (a.index > b.index) {\n        return 1;\n      } else {\n        return -1;\n      }\n    } else if (a.delay > b.delay) {\n      return 1;\n    } else {\n      return -1;\n    }\n  };\n\n  return VirtualAction;\n}(AsyncAction);\n\nexport { VirtualAction };","map":{"version":3,"mappings":"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","names":["tslib_1","AsyncAction","VirtualTimeScheduler","_super","SchedulerAction","maxFrames","Number","_this","prototype","flush","_a","actions","action","frame","error","VirtualAction","scheduler","work","index","schedule","delay","call","state","recycleAsyncId","active","a"],"sources":["/Users/godsheritageadeoye/Documents/GitHub/Mern-Portfolio/client/node_modules/rxjs/src/internal/scheduler/VirtualTimeScheduler.ts"],"sourcesContent":["import { AsyncAction } from './AsyncAction';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\nimport { SchedulerAction } from '../types';\n\nexport class VirtualTimeScheduler extends AsyncScheduler {\n\n  protected static frameTimeFactor: number = 10;\n\n  public frame: number = 0;\n  public index: number = -1;\n\n  constructor(SchedulerAction: typeof AsyncAction = VirtualAction as any,\n              public maxFrames: number = Number.POSITIVE_INFINITY) {\n    super(SchedulerAction, () => this.frame);\n  }\n\n  /**\n   * Prompt the Scheduler to execute all of its queued actions, therefore\n   * clearing its queue.\n   * @return {void}\n   */\n  public flush(): void {\n\n    const {actions, maxFrames} = this;\n    let error: any, action: AsyncAction<any>;\n\n    while ((action = actions[0]) && action.delay <= maxFrames) {\n      actions.shift();\n      this.frame = action.delay;\n\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    }\n\n    if (error) {\n      while (action = actions.shift()) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @nodoc\n */\nexport class VirtualAction<T> extends AsyncAction<T> {\n\n  protected active: boolean = true;\n\n  constructor(protected scheduler: VirtualTimeScheduler,\n              protected work: (this: SchedulerAction<T>, state?: T) => void,\n              protected index: number = scheduler.index += 1) {\n    super(scheduler, work);\n    this.index = scheduler.index = index;\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (!this.id) {\n      return super.schedule(state, delay);\n    }\n    this.active = false;\n    // If an action is rescheduled, we save allocations by mutating its state,\n    // pushing it to the end of the scheduler queue, and recycling the action.\n    // But since the VirtualTimeScheduler is used for testing, VirtualActions\n    // must be immutable so they can be inspected later.\n    const action = new VirtualAction(this.scheduler, this.work);\n    this.add(action);\n    return action.schedule(state, delay);\n  }\n\n  protected requestAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay: number = 0): any {\n    this.delay = scheduler.frame + delay;\n    const {actions} = scheduler;\n    actions.push(this);\n    (actions as Array<VirtualAction<T>>).sort(VirtualAction.sortActions);\n    return true;\n  }\n\n  protected recycleAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay: number = 0): any {\n    return undefined;\n  }\n\n  protected _execute(state: T, delay: number): any {\n    if (this.active === true) {\n      return super._execute(state, delay);\n    }\n  }\n\n  public static sortActions<T>(a: VirtualAction<T>, b: VirtualAction<T>) {\n    if (a.delay === b.delay) {\n      if (a.index === b.index) {\n        return 0;\n      } else if (a.index > b.index) {\n        return 1;\n      } else {\n        return -1;\n      }\n    } else if (a.delay > b.delay) {\n      return 1;\n    } else {\n      return -1;\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}